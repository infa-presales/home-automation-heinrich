- sensor:
    # Stromz채hler Keller Verbrauch
    - name: "PV Gesamtleistung"
      unique_id: "pv_gesamtleistung"
      unit_of_measurement: "W"
      device_class: "power"
      state_class: "measurement"
      state: >-
        {{ float(states('sensor.total_dc_power')) + 
           float(states('sensor.sgx_total_dc_power')) + 
           float(states('sensor.plenticoreplus10_solar_ac_power'))
         }}

    - name: Kostal Tagesertrag # Obsolete in future!
      unique_id: kostal_tagesertrag
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"
      state: >-
        {{ float(states('sensor.plenticoreplus10_solar_energy_pv1_day')) + 
           float(states('sensor.plenticoreplus10_solar_energy_pv2_day'))  
         }}
      attributes:
        last_reset: "{{ now().replace(hour=0, minute=0, second=0, microsecond=0) }}"

    - name: "SH10RT PV Leistung"
      unique_id: "sh10rt_pv_leistung"
      unit_of_measurement: "W"
      device_class: "power"
      state_class: "measurement"
      state: >-
        {{  float(states('sensor.sgx_total_dc_power')) }}

    - name: "SG10RT PV Leistung"
      unique_id: "sg10rt_pv_leistung"
      unit_of_measurement: "W"
      device_class: "power"
      state_class: "measurement"
      state: >-
        {{  float(states('sensor.total_dc_power')) }}

    - name: "KOSTAL PV Leistung"
      unique_id: "kostal_pv_leistung"
      unit_of_measurement: "W"
      device_class: "power"
      state_class: "measurement"
      state: >-
        {{  float(states('sensor.plenticoreplus10_solar_ac_power')) }}

    # WPW
    - name: "WPW Energy Consumption"
      unique_id: "wpw_energy_consumption"
      unit_of_measurement: "kWh"
      device_class: energy
      state_class: total_increasing
      state: >
        {{ states('sensor.pro3em_wp_wohnhaus_total_active_power') | float * 0.001 / 3600 }}
      attributes:
        source: "sensor.pro3em_wp_wohnhaus_total_active_power"
        integration_method: "trapezoidal"

# In templates/templates.yaml - am Ende der Datei hinzuf체gen
- sensor:
    - name: "WPW P06 Unit Mode Display"
      unique_id: "wpw_p06_unit_mode_display"
      state: >
        {% set mode = states('sensor.wpw_p06_unit_mode') %}
        {% set modes = {
          '0': 'DHW (Nur Warmwasser)',
          '1': 'Heating (Nur Heizen)',
          '2': 'Cooling (Nur K체hlen)',
          '3': 'Heating+DHW (Heizen + Warmwasser)',
          '4': 'Cooling+DHW (K체hlen + Warmwasser)'
        } %}
        {{ modes.get(mode, 'Unbekannt: ' ~ mode) }}
      
    - name: "WPW P07 Fan Mode Display"
      unique_id: "wpw_p07_fan_mode_display" 
      state: >
        {% set mode = states('sensor.wpw_p07_fan_mode') %}
        {% set modes = {
          '0': 'NOR (Normal/Turbo)',
          '1': 'ECO (Energiesparmodus)',
          '2': 'Night (Nachtmodus)',
          '3': 'Hi-COP (Test)'
        } %}
        {{ modes.get(mode, 'Unbekannt: ' ~ mode) }}
      
    - name: "WPW G02 Pump Work Display"
      unique_id: "wpw_g02_pump_work_display" 
      state: >
        {% set mode = states('sensor.wpw_g02_pump_work') %}
        {% set modes = {
          '0': 'Interval',
          '1': 'Normal',
          '2': 'Demand'
        } %}
        {{ modes.get(mode, 'Unbekannt: ' ~ mode) }}